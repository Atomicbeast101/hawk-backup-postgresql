name: Build/Push App for Dev
on:
  push:
    branches:
      - dev

env:
  DOCKER_HOST: "tcp://docker:2376/"
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_TLS_VERIFY: 1
  DOCKER_CERT_PATH: "/certs/client"
  IMAGE_BASE: ${{ vars.LOCAL_ACR_URL }}/${{ vars.LOCAL_ACR_USERNAME }}
  OS_VERSION: 3.21
  IMAGE_TAG_ENDING: -dev

jobs:
  release:
    name: Release (linux/${{ matrix.architecture }})
    runs-on: buildx-ubuntu-latest
    container:
      image: gitea/runner-images:ubuntu-latest
    strategy:
      matrix:
        architecture: [amd64]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Get Meta
        id: meta
        run: |
          echo REPO_NAME=$(echo ${GITHUB_REPOSITORY} | awk -F"/" '{print $2}') >> $GITHUB_OUTPUT
          echo DATE_RELEASE=$(echo "`date +'%Y.%m.%d'`") >> $GITHUB_OUTPUT

      - name: Install QEMU
        run: |
          sudo apt-get update
          sudo apt-get install qemu-user-static -y

      - name: Setup Docker Context for Buildx
        run: |
          docker context create builders

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          builder: builders

      - name: Login to Local ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.LOCAL_ACR_URL }}
          username: ${{ vars.LOCAL_ACR_USERNAME }}
          password: ${{ secrets.LOCAL_ACR_PASSWORD }}

      - name: Build & Push to Local ACR
        uses: docker/build-push-action@v6
        with:
          platforms: linux/${{ matrix.architecture }}
          push: true
          build-args: |
            OS_VERSION=${{ env.OS_VERSION }}
            ARCH=${{ matrix.architecture }}
          tags: |
            ${{ env.IMAGE_BASE }}/${{ steps.meta.outputs.REPO_NAME }}:${{ steps.meta.outputs.DATE_RELEASE }}${{ env.IMAGE_TAG_ENDING }}
            ${{ env.IMAGE_BASE }}/${{ steps.meta.outputs.REPO_NAME }}:latest${{ env.IMAGE_TAG_ENDING }}

  report:
    name: Report
    runs-on: ubuntu-latest
    continue-on-error: true
    needs:
      - release
    steps:
      - name: Get Meta
        id: meta
        run: |
          echo REPO_NAME=$(echo ${GITHUB_REPOSITORY} | awk -F"/" '{print $2}') >> $GITHUB_OUTPUT
          echo DATE_RELEASE=$(echo "`date +'%Y.%m.%d'`") >> $GITHUB_OUTPUT

      - name: Report of Success
        if: needs.release.result == 'success'
        uses: umahmood/pushover-actions@main
        env:
          PUSHOVER_USER: ${{ secrets.PUSHOVER_USER }}
          PUSHOVER_TOKEN: ${{ secrets.PUSHOVER_TOKEN }}
        with:
          title: Gitea DevOps
          message: ✅ Released ${{ steps.meta.outputs.REPO_NAME }}:${{ steps.meta.outputs.DATE_RELEASE }}${{ env.IMAGE_TAG_ENDING }} app!

      - name: Report of Failure
        if: needs.release.result != 'success'
        uses: umahmood/pushover-actions@main
        env:
          PUSHOVER_USER: ${{ secrets.PUSHOVER_USER }}
          PUSHOVER_TOKEN: ${{ secrets.PUSHOVER_TOKEN }}
        with:
          title: Gitea DevOps
          message: ❌ Unable to release ${{ steps.meta.outputs.REPO_NAME }}:${{ steps.meta.outputs.DATE_RELEASE }}${{ env.IMAGE_TAG_ENDING }} app.
